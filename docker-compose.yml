services:
  backend:
    build:
      context: .
      dockerfile: docker/Dockerfile.server
    container_name: chat-backend
    expose:
      - '4000'
    env_file:
      - .env_backend
    environment:
      - NODE_ENV=production
      - CORS_ORIGIN=http://localhost:3000,http://frontend:3000,https://localhost:3000,https://frontend:3000
    networks:
      - chat-network
    restart: unless-stopped
    depends_on: 
      - frontend
      - postgres

  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.client
    container_name: chat-frontend
    expose:
      - '3000'
    networks:
      - chat-network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certs:/etc/nginx/certs:ro
    depends_on:
      - frontend
      - backend
    networks:
      - chat-network

  postgres:
      image: postgres:16-alpine
      container_name: chat-postgres
      env_file:
        - .env_pg
      volumes:
        - postgres_data:/var/lib/postgresql/data
      expose:
        - '5432'
      networks:
        - chat-network
      restart: unless-stopped

networks:
  chat-network:
    driver: bridge


volumes:
  postgres_data:
    driver: local
